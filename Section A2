## Question 2

2.  Two Sum
    Given an array of integers nums and an integer target, return indices of the two numbers such
    that they add up to target.
    You may assume that each input would have exactly one solution, and you may not use the
    same element twice.
    You can return the answer in any order.

    Fuzz data:
    [-1, -2, -3, -4, -5], target = -8
    [0, 4, 3, 0], target = 0
    Constraints:
    2 <= nums.length <= 104
    -109 <= nums[i] <= 109
    -109 <= target <= 109
    Only one valid answer exists.

## Answer to question 2

1.  input nums = [-1, -2, -3, -4, -5], target = -8
    output = [2, 4]
    Because nums[2] + nums[4] == -8, we return [2, 4]

2.  input nums = [0, 4, 3, 0], target = 0
    output = [0, 3]
    Because nums[0] + nums[3] == 0, we return [0, 3]

## The Solution using the Brute Force Method

Loop through each element in nums, then loop through it again to see whether there is a value equal to target - nums[i].

function twoSum(nums, target) {
for (let i = 0; i < nums.length; i++) {
for (let j = i + 1; j < nums.length; j++) {
if (nums[i] + nums[j] === target) {
return [i, j];
}
}
}
return [];
}

Time Complexity: O(nÂ²)
Space Complexity: O(1)
